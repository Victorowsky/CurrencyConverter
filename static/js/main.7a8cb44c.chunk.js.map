{"version":3,"sources":["comp/InputValue.js","comp/Snackbar.js","comp/Results.js","App.js","index.js"],"names":["InputValue","currency","setCurrency","availabeCurrencies","setCurrencyToConvert","currencyToConvert","value","setValue","createMenuItem","map","index","MenuItem","className","TextField","id","label","onChange","e","target","autoComplete","Select","labelId","event","style","cursor","onClick","secondCurrency","Alert","props","elevation","variant","useStyles","makeStyles","theme","root","width","marginTop","spacing","CustomizedSnackbars","open","setOpen","classes","handleClose","reason","Snackbar","autoHideDuration","onClose","severity","Results","data","result","rates","toFixed","useState","title","date","App","setData","setAvailabeCurrencies","APILink","useEffect","fetch","then","res","json","prev","base","sort","length","forEach","item","indexOf","newValue","slice","toLowerCase","sign","includes","el","CircularProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a8cb44c.chunk.js","sourcesContent":["import \"./InputValue.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\n\r\n\r\nconst InputValue = ({\r\n  currency,\r\n  setCurrency,\r\n  availabeCurrencies,\r\n  setCurrencyToConvert,\r\n  currencyToConvert,\r\n  value,\r\n  setValue,\r\n}) => {\r\n  const handleChangeCurrency = (event) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n  const handleChangeCurrencyToConvert = (event) => {\r\n    setCurrencyToConvert(event.target.value);\r\n  };\r\n\r\n  const handleChangeValue = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const createMenuItem = availabeCurrencies.map((currency, index) => (\r\n    <MenuItem key={index} value={currency}>\r\n      {currency}\r\n    </MenuItem>\r\n  ));\r\n\r\n  const handleReplaceCurrecies = () =>{\r\n    const firstCurrency = currency\r\n    const secondCurrency = currencyToConvert\r\n    if(currencyToConvert !== firstCurrency){\r\n      setCurrencyToConvert(firstCurrency)\r\n    }\r\n    if(currency !== secondCurrency){\r\n      setCurrency(secondCurrency)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"inputValue\">\r\n      <TextField\r\n        id=\"standard-basic\"\r\n        label=\"Enter value\"\r\n        value={value}\r\n        onChange={handleChangeValue}\r\n        autoComplete='off'\r\n      />\r\n      <div className=\"chooseCurrency\">\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={currency}\r\n          onChange={handleChangeCurrency}\r\n        >\r\n          {createMenuItem}\r\n        </Select>\r\n        <ArrowForwardIcon style={{cursor: \"pointer\"}} onClick={handleReplaceCurrecies} />\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={currencyToConvert}\r\n          onChange={handleChangeCurrencyToConvert}\r\n        >\r\n          {createMenuItem}\r\n        </Select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputValue;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars({ open, setOpen }) {\r\n  const classes = useStyles();\r\n  //   const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"warning\">\r\n          Enter only numbers\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./Results.css\";\r\nimport Snackbar from \"./Snackbar\";\r\n\r\nconst Results = ({ currencyToConvert, data, value }) => {\r\n  const result = (value * data.rates[currencyToConvert]).toFixed(2);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n\r\n\r\n  if (result === \"NaN\" && open === false) {\r\n    setOpen(true);\r\n  } else if (result !== \"NaN\" && open !== false) {\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <>\r\n      {result !== \"NaN\" && value && (\r\n        <div className=\"result\" title={data.date}>\r\n          <p>{result}{currencyToConvert}</p>\r\n        </div>\r\n      )}\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n// value.indexOf('€')>0","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport InputValue from \"./comp/InputValue\";\nimport Results from \"./comp/Results\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction App() {\n  const [currency, setCurrency] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [availabeCurrencies, setAvailabeCurrencies] = useState([]);\n  const APILink = `https://api.exchangeratesapi.io/latest?base=${currency}`;\n  const [value, setValue] = useState(\"\");\n\n  const [currencyToConvert, setCurrencyToConvert] = useState(\"PLN\");\n\n  const currencySigns = [\n    {\n      sign: '$',\n      currency: \"USD\"\n    },\n    {\n      sign: '€',\n      currency: \"EUR\"\n    },\n    {\n      sign: '£',\n      currency: \"GBP\"\n    },\n    {\n      sign: 'kn',\n      currency: \"HRK\"\n    },\n    {\n      sign: 'kr',\n      currency: \"NOK\"\n    },\n    {\n      sign: 'zł',\n      currency: \"PLN\"\n    },\n    {\n      sign: 'zl',\n      currency: \"PLN\"\n    },\n    {\n      sign: '₽',\n      currency: \"RUB\"\n    },\n    {\n      sign: 'lei',\n      currency: \"RON\"\n    },\n    {\n      sign: '₺',\n      currency: \"TRY\"\n    },\n    {\n      sign: 'R$',\n      currency: \"BRL\"\n    },\n    {\n      sign: '¥',\n      currency: \"CNY\"\n    },\n\n\n  ]\n\n  useEffect(() => {\n    fetch(APILink)\n      .then((res) => res.json())\n      .then((res) => {\n        setData(res);\n        setAvailabeCurrencies([]);\n        for (const currency in res.rates) {\n          setAvailabeCurrencies((prev) => [...prev, currency]); // FETCH ALL AVAILABLE CURRENCIES\n        }\n        setAvailabeCurrencies((prev) => [...prev, res.base].sort()); // ADD DEFAULT CURRENCY\n        setCurrency(res.base);\n      });\n  }, [APILink, currency]);\n\n  if (value.length > 0) {\n    //   EASY INSERT YOUR CURRENCY IN INPUT ('USD', 'EUR' AND MORE)\n    availabeCurrencies.forEach((item) => {\n      if (value.indexOf(item) > 0) {\n        let newValue = value.slice(0, value.indexOf(item));\n        setValue(newValue);\n        setCurrency(item);\n      }\n      if (value.indexOf(item.toLowerCase()) > 0) {\n        let newValue = value.slice(0, value.indexOf(item.toLowerCase()));\n        setValue(newValue);\n        setCurrency(item);\n      }\n    });\n  };\n  \n  if(value.length > 0){\n    // EASY INSERT SIGN OF CURRENCY ($,€,¥)\n    currencySigns.forEach(item=> {\n      if (value.includes(item.sign)) {\n        let newValue = value.slice(0, value.indexOf(item.sign));\n        if(item.sign.length === 1){\n          newValue += value.slice(value.indexOf(item.sign)+1)\n        }else{\n          newValue += value.slice(value.indexOf(item.sign)+2)\n        }\n        setValue(newValue);\n        setCurrency(item.currency);\n      }\n    })\n  }\n\n  if (value.includes(\",\")) {\n    let index = value.indexOf(\",\");\n    let el = value.slice(0, index);\n    el += \".\";\n    el += value.slice(index + 1);\n    setValue(el);\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">Currency Converter</h1>\n      {data.date ? (\n        <div className=\"app\">\n          <InputValue\n            currency={currency}\n            setCurrency={setCurrency}\n            currencyToConvert={currencyToConvert}\n            setCurrencyToConvert={setCurrencyToConvert}\n            availabeCurrencies={availabeCurrencies}\n            value={value}\n            setValue={setValue}\n          />\n          <Results\n            data={data}\n            currency={currency}\n            currencyToConvert={currencyToConvert}\n            value={value}\n          />\n        </div>\n      ) : (\n        <div className=\"app\">\n          <CircularProgress />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}